package stepdefs;

import cucumber.api.java.en.Given;
import cucumber.api.java.en.Then;
import cucumber.api.java.en.When;
import endpoints.BaseEndpoints;
import endpoints.PostEndpoint;
import endpoints.UserEndpoint;
import model.Post;

public class PostsEndpointStepDefinitions {

	private World world;
	private PostEndpoint postEndpoint = new PostEndpoint();

	public PostsEndpointStepDefinitions(World world) {
		this.world = world;
	}

	@When("(?i)^I create a Post in the system$")
	public void createANewPost() {
		postEndpoint.createPost(world);
	}

	@Then("(?i)^the create post request response has a '(\\d+)' response code$")
	public void responseStatusCodeVerification(Integer rc) {
		postEndpoint.verifyResponseStatusValue(world.getResponse(), rc.intValue());
	}

	@Then("(?i)^the create post requests response contains the correct json data$")
	public void fieldVerificationofNewPostResponse() {
		postEndpoint.verifyPostValuesAreAsExpected(world.getResponse(), postEndpoint.getDefaultPost());
	}

	@Given("(?i)^There is an existing Post$")
	public void checkforExistingPost() {
		postEndpoint.createPost(world);
		postEndpoint.verifyResponseStatusValue(world.getResponse(), PostEndpoint.SUCCESS_CREATED_CODE);
	}

	@When("(?i)^user deletes the existing Post$")
	public void deleteExistingPost() {
		world.setResponse(postEndpoint.deletePost(world.getRequest()));
	}

	@When("(?i)^search for the Post by its id$")
	public void searchPostByID() {
		world.setResponse(postEndpoint.getPostById(world.getRequest()));
	}

	@Then("(?i)^the requests response will be Empty$")
	public void checkEmptyResponse() {
		postEndpoint.verifyResponseIsEmpty(world.getResponse());
	}

	@Then("(?i)^User can add a Post that has no title$")
	public void createPostwithNoTitle() {
		postEndpoint.createPost(world, new Post(101, 1, " ", "PostBody"));
		postEndpoint.verifyResponseStatusValue(world.getResponse(), PostEndpoint.SUCCESS_CREATED_CODE);
	}

	@When("(?i)^user made a post to the system without providing an id value$")
	public void createPostwithNoID() {
		postEndpoint.createPost(world, new Post(101, null, "Post Title", "Post Body"));
	}

	@Then("(?i)^an id is automatically generated for the newly added post$")
	public void verificationAutogeneratedPOSTID() {
		postEndpoint.verifyAutoGeneratedPostId(world.getResponse());
	}

	@When("(?i)^user create a POST and the json body is malformed and consists of only '(.*?)'$")
	public void enterEmptyRequestBodyPOST(String body) {
		world.setRequest(postEndpoint.getRequestWithJSONHeaders());
		world.setResponse(postEndpoint.createPostWithEmptyBody(world.getRequest(), body));
	}

}
