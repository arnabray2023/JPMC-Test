package endpoints;

import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.MatcherAssert.assertThat;

import org.hamcrest.core.IsNull;
import org.hamcrest.text.IsEmptyString;

import io.restassured.response.Response;
import io.restassured.specification.RequestSpecification;
import model.Post;
import stepdefs.World;

public class PostEndpoint extends BaseEndpoints {
	private final String POST_ENDPOINT_PATH = "/posts";
	private Post defaultPost;

	public PostEndpoint() {
		super();
		defaultPost = new Post();
	}

	public String getPath() {
		return this.POST_ENDPOINT_PATH;
	}

	public Response getOrderById(RequestSpecification request, String id) {
		String url = getBaseUrl() + this.getPath() + id;
		return sendRequest(request, BaseEndpoints.GET_REQUEST, url, null);
	}

	public Response createPostWithEmptyBody(RequestSpecification request, String body) {
		String url = getBaseUrl() + this.getPath();
		request.body(body);
		return sendRequest(request, BaseEndpoints.POST_REQUEST, url, null);
	}

	public Response createPost(RequestSpecification request) {
		return createPost(request, defaultPost);
	}

	public Response createPost(RequestSpecification request, Post post) {
		String url = getBaseUrl() + this.getPath();
		return sendRequest(request, BaseEndpoints.POST_REQUEST, url, post);
	}

	public Response addPet(RequestSpecification request, Post post) {
		String url = getBaseUrl() + this.getPath();
		return sendRequest(request, BaseEndpoints.POST_REQUEST, url, post);
	}

	public Post getDefaultPost() {
		return this.defaultPost;
	}

	public void verifyPostValuesAreAsExpected(Response response, Post post) {
		String title = post.getTitle().toString();
		String id = post.getId().toString();
		String body = post.getBody().toString();
		verifyResponseKeyValues("id", id, response);
		verifyResponseKeyValues("title", title, response);
		verifyResponseKeyValues("body", body, response);

	}

	public void verifyResponseIsEmpty(Response r) {
		String response = r.getBody().asString();
		assertThat(response, is("{}"));
	}

	public void createPost(World world) {
		world.setRequest(getRequestWithJSONHeaders());
		world.setResponse(createPost(world.getRequest()));
	}

	public void createPost(World world, Post post) {
		world.setPost(post);
		world.setRequest(getRequestWithJSONHeaders());
		world.setResponse(createPost(world.getRequest(), post));
	}

	public Response deletePost(RequestSpecification request) {
		return deletePost(request, getDefaultPost());
	}

	public Response deletePost(RequestSpecification request, Post post) {
		String id = post.getId().toString();
		String url = getBaseUrl() + this.getPath() + id;
		return sendRequest(request, BaseEndpoints.DELETE_REQUEST, url, null);
	}

	public Response getPostById(RequestSpecification request) {
		return getPostById(request, getDefaultPost().getId().toString());
	}

	public Response getPostById(RequestSpecification request, String id) {
		String url = getBaseUrl() + this.getPath() + id;
		return sendRequest(request, BaseEndpoints.GET_REQUEST, url, null);
	}

	public void verifyAutoGeneratedPostId(Response response) {
		String idVal = response.jsonPath().getString("id");
		verifyTrue(idVal != null);
		verifyTrue(!idVal.equalsIgnoreCase(""));
		verifyTrue(Long.parseLong(idVal) > 0);
	}

}
